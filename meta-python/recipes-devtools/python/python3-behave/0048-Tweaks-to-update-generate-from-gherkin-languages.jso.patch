From 7d99f368966c03829060b25b26fc6e379aba3abd Mon Sep 17 00:00:00 2001
From: jenisys <jenisys@users.noreply.github.com>
Date: Mon, 8 Jul 2019 01:07:11 +0200
Subject: [PATCH] Tweaks to update/generate from gherkin-languages.json

---
 etc/gherkin/convert_gherkin-languages.py | 16 +++++++----
 tasks/develop.py                         | 34 +++++++++++-------------
 2 files changed, 27 insertions(+), 23 deletions(-)

diff --git a/etc/gherkin/convert_gherkin-languages.py b/etc/gherkin/convert_gherkin-languages.py
index 1803ca6..9ef9b0c 100755
--- a/etc/gherkin/convert_gherkin-languages.py
+++ b/etc/gherkin/convert_gherkin-languages.py
@@ -68,7 +68,7 @@ def yaml_normalize(data):
     return data
 
 
-def data_normalize(data):
+def data_normalize(data, verbose=False):
     """Normalize "gherkin-languages.json" data into internal format,
     needed by behave."
 
@@ -76,7 +76,8 @@ def data_normalize(data):
     :return: Normalized data (as dictionary).
     """
     for language in data:
-        print("Language: %s ..." % language)
+        if verbose:
+            print("Language: %s ..." % language)
         # -- STEP: Normalize attribute "scenarioOutline" => "scenario_outline"
         lang_keywords = data[language]
         lang_keywords[u"scenario_outline"] = lang_keywords[u"scenarioOutline"]
@@ -107,7 +108,7 @@ def data_normalize(data):
 
 
 def gherkin_languages_to_python_module(gherkin_languages_path, output_file=None,
-                                       encoding=None):
+                                       encoding=None, verbose=False):
     """Workhorse.
     Performs the conversion from "gherkin-languages.json" to "i18n.py".
     Writes output to file or console (stdout).
@@ -115,6 +116,7 @@ def gherkin_languages_to_python_module(gherkin_languages_path, output_file=None,
     :param gherkin_languages_path: File path for JSON file.
     :param output_file:     Output filename (or STDOUT for: None, "stdout", "-")
     :param encoding:        Optional output encoding to use (default: UTF-8).
+    :param verbose:         Enable verbose mode (as bool; optional).
     """
     if encoding is None:
         encoding = "UTF-8"
@@ -122,7 +124,7 @@ def gherkin_languages_to_python_module(gherkin_languages_path, output_file=None,
     # -- STEP 1: Load JSON data.
     json_encoding = "UTF-8"
     languages = json.load(open(gherkin_languages_path, encoding=json_encoding))
-    languages = data_normalize(languages)
+    languages = data_normalize(languages, verbose=verbose)
     # languages = yaml_normalize(languages)
 
     # -- STEP 2: Generate python module with i18n data.
@@ -178,6 +180,9 @@ def main(args=None):
     parser.add_argument("-e", "--encoding", dest="encoding",
                         default="UTF-8",
                         help="Output encoding.")
+    parser.add_argument("--verbose", dest="verbose", default=False,
+                        action="store_true",
+                        help="Enable verbose mode.")
     parser.add_argument("output_file", default="i18n.py", nargs="?",
                 help="Filename of Python I18N module (as output).")
     parser.add_argument("--version", action="version", version=__version__)
@@ -191,7 +196,8 @@ def main(args=None):
     try:
         print("Writing %s .." % options.output_file)
         gherkin_languages_to_python_module(options.json_file, options.output_file,
-                                           encoding=options.encoding)
+                                           encoding=options.encoding,
+                                           verbose=options.verbose)
     except Exception as e:
         message = "%s: %s" % (e.__class__.__name__, e)
         sys.exit(message)
diff --git a/tasks/develop.py b/tasks/develop.py
index b08df0e..9a21363 100644
--- a/tasks/develop.py
+++ b/tasks/develop.py
@@ -18,9 +18,15 @@ GHERKIN_LANGUAGES_URL = "https://raw.githubusercontent.com/cucumber/cucumber/mas
 # -----------------------------------------------------------------------------
 # TASKS:
 # -----------------------------------------------------------------------------
-@task(name="update_gherkin") # TOO-LONGS: aliases=["update_gherkin_languages"])
-def update_gherkin_languages(ctx):
-    """Update "gherkin-languages.json" file from cucumber-repo."""
+@task
+def update_gherkin(ctx, dry_run=False):
+    """Update "gherkin-languages.json" file from cucumber-repo.
+
+    * Download "gherkin-languages.json" from cucumber repo
+    * Update "gherkin-languages.json"
+    * Generate "i18n.py" file from "gherkin-languages.json"
+    * Update "behave/i18n.py" file (optional; not in dry-run mode)
+    """
     with cd("etc/gherkin"):
         # -- BACKUP-FILE:
         gherkin_languages_file = Path("gherkin-languages.json")
@@ -28,31 +34,23 @@ def update_gherkin_languages(ctx):
 
         print('Downloading "gherkin-languages.json" from github:cucumber ...')
         download_request = requests.get(GHERKIN_LANGUAGES_URL)
-        gherkin_languages_newfile = Path("gherkin-languages.json.NEW")
         assert download_request.ok
         print('Download finished: OK (size={0})'.format(len(download_request.content)))
-        with open(gherkin_languages_newfile, "wb") as f:
+        with open(gherkin_languages_file, "wb") as f:
             f.write(download_request.content)
-        gherkin_languages_newfile.rename("gherkin-languages.json")
 
         print('Generating "i18n.py" ...')
         ctx.run("./convert_gherkin-languages.py")
-
-
-# -----------------------------------------------------------------------------
-# TASK HELPERS:
-# -----------------------------------------------------------------------------
-def print_packages(packages):
-    print("PACKAGES[%d]:" % len(packages))
-    for package in packages:
-        package_size = package.stat().st_size
-        package_time = package.stat().st_mtime
-        print("  - %s  (size=%s)" % (package, package_size))
+        ctx.run("diff i18n.py ../../behave/i18n.py")
+        if not dry_run:
+            print("Updating behave/i18n.py ...")
+            Path("i18n.py").move("../../behave/i18n.py")
 
 
 # -----------------------------------------------------------------------------
 # TASK CONFIGURATION:
 # -----------------------------------------------------------------------------
+# TOO-LONG: aliases=["update_gherkin_languages"])
 namespace = Collection()
-namespace.add_task(update_gherkin_languages)
+namespace.add_task(update_gherkin)
 namespace.configure({})
