From 8caadee8fcf58da20d3ee36be03896ec28271c10 Mon Sep 17 00:00:00 2001
From: jenisys <jenisys@users.noreply.github.com>
Date: Sun, 9 Jun 2019 19:32:10 +0200
Subject: [PATCH] FIX warnings related to invalid escapes in regex.

---
 behave4cmd0/command_shell_proc.py           |  3 ++-
 features/steps/behave_select_files_steps.py | 24 +++++++++++++--------
 2 files changed, 17 insertions(+), 10 deletions(-)

diff --git a/behave4cmd0/command_shell_proc.py b/behave4cmd0/command_shell_proc.py
index 07f1c84..03ca55a 100755
--- a/behave4cmd0/command_shell_proc.py
+++ b/behave4cmd0/command_shell_proc.py
@@ -251,6 +251,7 @@ class BehaveWinCommandOutputProcessor(LineCommandOutputProcessor):
             "No such file or directory: '(?P<path>.*)'",
             "[Errno 2] No such file or directory:"),  # IOError
         ExceptionWithPathNormalizer(
-            '^\s*File "(?P<path>.*)", line \d+, in ',
+            # WAS: '^\s*File "(?P<path>.*)", line \d+, in ',
+            r'^\s*File "(?P<path>.*)", line \d+, in ',
             'File "'),
     ]
diff --git a/features/steps/behave_select_files_steps.py b/features/steps/behave_select_files_steps.py
index 431674e..0d2cd2e 100644
--- a/features/steps/behave_select_files_steps.py
+++ b/features/steps/behave_select_files_steps.py
@@ -1,29 +1,34 @@
 # -*- coding: utf-8 -*-
-"""
+# DOCSTRING-NEEDS-REGEX-STRING-PREFIX: Due to example w/ wildcard pattern.
+r'''
 Provides step definitions that test how the behave runner selects feature files.
 
 EXAMPLE:
+
+.. code-block:: gherkin
+
     Given behave has the following feature fileset:
-      '''
+      """
       features/alice.feature
       features/bob.feature
       features/barbi.feature
-      '''
+      """
     When behave includes feature files with "features/a.*\.feature"
     And  behave excludes feature files with "features/b.*\.feature"
     Then the following feature files are selected:
-      '''
+      """
       features/alice.feature
-      '''
-"""
+      """
+'''
 
 from __future__ import absolute_import
-from behave import given, when, then
-from behave.runner_util import FeatureListParser
-from hamcrest import assert_that, equal_to
 from copy import copy
 import re
 import six
+from hamcrest import assert_that, equal_to
+from behave import given, when, then
+from behave.runner_util import FeatureListParser
+
 
 # -----------------------------------------------------------------------------
 # STEP UTILS:
@@ -47,6 +52,7 @@ class BasicBehaveRunner(object):
 # -----------------------------------------------------------------------------
 # STEP DEFINITIONS:
 # -----------------------------------------------------------------------------
+# pylint: disable=invalid-name
 @given('behave has the following feature fileset')
 def step_given_behave_has_feature_fileset(context):
     assert context.text is not None, "REQUIRE: text"
