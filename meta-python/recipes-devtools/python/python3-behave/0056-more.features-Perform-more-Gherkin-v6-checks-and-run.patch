From 2d3389db8b7394243acc2e0004ea55730c2f7b28 Mon Sep 17 00:00:00 2001
From: jenisys <jenisys@users.noreply.github.com>
Date: Sat, 13 Jul 2019 13:22:21 +0200
Subject: [PATCH] more.features: Perform more Gherkin v6 checks and run
 examples.

---
 invoke.yaml                                   | 10 ++---
 more.features/environment.py                  | 28 +++++++++++++
 .../formatter.json.validate_output.feature    | 22 +++++++++-
 more.features/run_examples.feature            | 41 +++++++++++++++++++
 4 files changed, 93 insertions(+), 8 deletions(-)
 create mode 100644 more.features/environment.py
 create mode 100644 more.features/run_examples.feature

diff --git a/invoke.yaml b/invoke.yaml
index d6f141c..a32345e 100644
--- a/invoke.yaml
+++ b/invoke.yaml
@@ -24,13 +24,6 @@ sphinx:
       - de
       # PREPARED: - zh-CN
 
-cleanup:
-    extra_directories:
-      - "build"
-      - "dist"
-      - "__WORKDIR__"
-      - reports
-
 cleanup:
     extra_directories:
       - "build"
@@ -47,6 +40,9 @@ cleanup_all:
       - .hypothesis
       - .pytest_cache
 
+    extra_files:
+      - "**/testrun*.json"
+
 behave_test:
     scopes:
       - features
diff --git a/more.features/environment.py b/more.features/environment.py
new file mode 100644
index 0000000..9d4302b
--- /dev/null
+++ b/more.features/environment.py
@@ -0,0 +1,28 @@
+# -*- coding: UTF-8 -*-
+
+from behave.tag_matcher import ActiveTagMatcher, setup_active_tag_values
+import sys
+
+# -- MATCHES ANY TAGS: @use.with_{category}={value}
+# NOTE: active_tag_value_provider provides category values for active tags.
+python_version = "%s.%s" % sys.version_info[:2]
+active_tag_value_provider = {
+    "python.version": python_version,
+}
+active_tag_matcher = ActiveTagMatcher(active_tag_value_provider)
+
+# -----------------------------------------------------------------------------
+# HOOKS:
+# -----------------------------------------------------------------------------
+def before_all(context):
+    # -- SETUP ACTIVE-TAG MATCHER (with userdata):
+    setup_active_tag_values(active_tag_value_provider, context.config.userdata)
+
+def before_feature(context, feature):
+    if active_tag_matcher.should_exclude_with(feature.tags):
+        feature.skip(reason=active_tag_matcher.exclude_reason)
+
+def before_scenario(context, scenario):
+    if active_tag_matcher.should_exclude_with(scenario.effective_tags):
+        scenario.skip(reason=active_tag_matcher.exclude_reason)
+
diff --git a/more.features/formatter.json.validate_output.feature b/more.features/formatter.json.validate_output.feature
index a5f8ab6..31550d5 100644
--- a/more.features/formatter.json.validate_output.feature
+++ b/more.features/formatter.json.validate_output.feature
@@ -34,4 +34,24 @@ Feature: Validate JSON Formatter Output
     Then it should pass with:
         """
         validate: testrun3.json ... OK
-        """
\ No newline at end of file
+        """
+
+  @gherkin_v6
+  Scenario: Validate JSON output from example/gherkin_v6/ test run
+    Given I use the directory "examples/gherkin_v6" as working directory
+    When I run "behave -f json -o testrun_gherkin6_1.json features/"
+    When I run "../../bin/jsonschema_validate.py testrun_gherkin6_1.json"
+    Then it should pass with:
+        """
+        validate: testrun_gherkin6_1.json ... OK
+        """
+
+  @gherkin_v6
+  Scenario: Validate JSON output from example/gherkin_v6/ test run (case: partly failing)
+    Given I use the directory "examples/gherkin_v6" as working directory
+    When I run "behave --tags=fail -f json -o testrun_gherkin6_2.json features/"
+    When I run "../../bin/jsonschema_validate.py testrun_gherkin6_2.json"
+    Then it should pass with:
+        """
+        validate: testrun_gherkin6_2.json ... OK
+        """
diff --git a/more.features/run_examples.feature b/more.features/run_examples.feature
new file mode 100644
index 0000000..4778866
--- /dev/null
+++ b/more.features/run_examples.feature
@@ -0,0 +1,41 @@
+Feature: Ensure that all examples are usable
+
+  Scenario Outline: Use <example_dir>
+    Given I use the directory "<example_dir>" as working directory
+    When I run "behave <behave_cmdline>"
+    Then it should <outcome>
+
+    Examples:
+      | example_dir         | behave_cmdline        | outcome |
+      | examples/env_vars   | features/             | pass    |
+      | examples/fixture.no_background | features/  | pass    |
+      | examples/gherkin_v6 | features/             | pass    |
+
+
+  Scenario: examples/gherkin_v6 -- @xfail parts
+    Given I use the directory "examples/gherkin_v6" as working directory
+    When I run "behave --tags=fail features/"
+    Then it should fail with:
+      """
+      0 features passed, 1 failed, 2 skipped
+      0 rules passed, 1 failed, 6 skipped
+      1 scenario passed, 2 failed, 12 skipped
+      2 steps passed, 2 failed, 39 skipped, 0 undefined
+      """
+    And the command output should contain:
+      """
+      Failing scenarios:
+        features/rule_fails.feature:7  F0 -- Fails
+        features/rule_fails.feature:16  F2 -- Fails
+      """
+
+
+  @use.with_python.version=3.4
+  @use.with_python.version=3.5
+  @use.with_python.version=3.6
+  @use.with_python.version=3.7
+  @use.with_python.version=3.8
+  Scenario: examples/async_step (needs: py34 or newer)
+    Given I use the directory "examples/async_step" as working directory
+    When I run "behave features/"
+    Then it should pass
