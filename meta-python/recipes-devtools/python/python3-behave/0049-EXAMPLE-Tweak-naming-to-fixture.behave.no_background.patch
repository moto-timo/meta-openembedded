From 0bdc9941cf808774751d1ce5f01e379514bfef7e Mon Sep 17 00:00:00 2001
From: jenisys <jenisys@users.noreply.github.com>
Date: Tue, 9 Jul 2019 08:10:26 +0200
Subject: [PATCH] EXAMPLE: Tweak naming to @fixture.behave.no_background (was:
 .override_background)

---
 examples/fixture.no_background/README.rst     | 110 ++++++++++++++++++
 .../behave_fixture_lib/__init__.py            |   0
 .../behave_fixture_lib/no_background.py       |  72 ++++++++++++
 .../features/environment.py                   |  35 ++++++
 .../features/example.feature                  |  18 +++
 .../features/steps/basic_steps.py             |  13 +++
 .../features/steps/use_steplib_behave4cmd.py  |  12 ++
 7 files changed, 260 insertions(+)
 create mode 100644 examples/fixture.no_background/README.rst
 create mode 100644 examples/fixture.no_background/behave_fixture_lib/__init__.py
 create mode 100644 examples/fixture.no_background/behave_fixture_lib/no_background.py
 create mode 100644 examples/fixture.no_background/features/environment.py
 create mode 100644 examples/fixture.no_background/features/example.feature
 create mode 100644 examples/fixture.no_background/features/steps/basic_steps.py
 create mode 100644 examples/fixture.no_background/features/steps/use_steplib_behave4cmd.py

diff --git a/examples/fixture.no_background/README.rst b/examples/fixture.no_background/README.rst
new file mode 100644
index 0000000..4243f10
--- /dev/null
+++ b/examples/fixture.no_background/README.rst
@@ -0,0 +1,110 @@
+EXAMPLE: Disable Background Inheritance Mechanism for Scenario
+===============================================================================
+
+:RELATED-TO: #756
+
+This example shows how the Background inheritance mechanism in Gherkin
+can be disabled in ``behave``.
+
+Parts of the recipe:
+
+* features/example.feature (Feature file as example)
+* features/environment.py (glue code and hooks for fixture-tag / fixture)
+* behave_fixture_lib/no_background.py (fixture implementation, workhorse)
+
+
+.. warning:: BEWARE: This shows you how can do it, not that you should do it
+
+    BETTER:
+
+    * Use Rules to group Scenarios, each with its own Background (in Gherkin v6)
+    * Split Feature aspects into multiple feature files (if needed)
+    * ... (see issue #756 above)
+
+
+Explanation
+------------------------------------------------------------------------
+
+Example code how to provide a behave fixture to disable the
+background inheritance mechanism by using a fixture / fixture-tag.
+The fixture-tag "@fixture.behave.no_background" marks the
+location in Gherkin (which Scenario) where the fixture should be used
+
+.. code-block:: gherkin
+
+    # -- FILE: features/example.feature
+    Feature: Show how @fixture.behave.no_background is used
+
+        Background:
+          Given a background step
+
+        Scenario: Alice
+          When a step passes
+          And note that "Background steps are executed here"
+
+        @fixture.behave.no_background
+        Scenario: Bob
+          Given I need another scenario setup
+          When another step passes
+          And note that "NO-BACKGROUND STEPS are executed here"
+
+When the feature is executed, you see that:
+
+* First Scenario "Alice": Background steps are inherited and executed first.
+* Second Scenario "Bob": No Background step is executed.
+
+.. code-block:: sh
+
+    $ ../../bin/behave -f plain features/example.feature
+    Feature: Override the Background Inheritance Mechanism in some Scenarios
+      Background:
+
+      Scenario: Alice
+        Given a background step passes ... passed
+        When a step passes ... passed
+        And note that "Background steps are executed here" ... passed
+    FIXTURE-HINT: DISABLE-BACKGROUND FOR: Bob
+
+      Scenario: Bob
+        Given I need another scenario setup ... passed
+        When another step passes ... passed
+        And note that "NO-BACKGROUND STEPS are executed here" ... passed
+
+    1 feature passed, 0 failed, 0 skipped
+    2 scenarios passed, 0 failed, 0 skipped
+    6 steps passed, 0 failed, 0 skipped, 0 undefined
+
+
+The environment file provides the glue code that the fixture is called:
+
+.. code-block:: python
+
+    # -- FILE: features/environment.py
+    from behave_fixture_lib.no_background import behave_no_background
+    from behave.fixture import use_fixture_by_tag
+
+    # -- FIXTURE REGISTRY:
+    fixture_registry = {
+        "fixture.behave.no_background": behave_no_background,
+    }
+
+    # -----------------------------------------------------------------------------
+    # HOOKS:
+    # -----------------------------------------------------------------------------
+    def before_tag(context, tag):
+        if tag.startswith("fixture."):
+            return use_fixture_by_tag(tag, context, fixture_registry)
+
+
+.. code-block:: python
+
+    # -- FILE: behave_fixture_lib/no_background.py (fixture implementation)
+    from behave import fixture
+
+    @fixture(name="fixture.behave.no_background")
+    def behave_no_background(ctx):
+        # -- SETUP-PART-ONLY: Disable background inheritance (for scenarios only).
+        current_scenario = ctx.scenario
+        if current_scenario:
+            print("FIXTURE-HINT: DISABLE-BACKGROUND FOR: %s" % current_scenario.name)
+            current_scenario.use_background = False
diff --git a/examples/fixture.no_background/behave_fixture_lib/__init__.py b/examples/fixture.no_background/behave_fixture_lib/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/examples/fixture.no_background/behave_fixture_lib/no_background.py b/examples/fixture.no_background/behave_fixture_lib/no_background.py
new file mode 100644
index 0000000..47bd0b5
--- /dev/null
+++ b/examples/fixture.no_background/behave_fixture_lib/no_background.py
@@ -0,0 +1,72 @@
+# -*- coding: UTF-8 -*-
+# RELATED-TO: #756
+"""
+Example code how to provide a behave fixture to disable the
+background inheritance mechanism.
+
+.. code-block:: gherkin
+
+    # -- FILE: features/example.feature
+    Feature: Show how @fixture.behave.override_background is used
+
+        Background:
+          Given a background step
+
+        Scenario: Alice
+          When a step passes
+          And note that "Background steps are executed here"
+
+        @fixture.behave.no_background
+        Scenario: Bob
+          Given I need another scenario setup
+          When another step passes
+          And note that "NO-BACKGROUND STEPS are executed here"
+
+.. code-block:: python
+
+    # -- FILE: features/environment.py
+    from behave_fixture_lib.override_background import behave_override_background
+    from behave.fixture import use_fixture_by_tag
+
+    # -- FIXTURE REGISTRY:
+    fixture_registry = {
+        "fixture.behave.no_background": behave_override_background,
+    }
+
+    def before_tag(context, tag):
+        if tag.startswith("fixture."):
+            return use_fixture_by_tag(tag, context, fixture_registry)
+
+"""
+
+from __future__ import absolute_import, print_function
+from behave import fixture
+
+
+# -----------------------------------------------------------------------------
+# BEHAVE FIXTURES:
+# -----------------------------------------------------------------------------
+@fixture(name="fixture.behave.ono_background")
+def behave_no_background(ctx):
+    """Override the Background inherintance mechanism.
+    If a Feature / Rule Background exists in a Feature,
+    all contained Scenarios inherit the Background's steps.
+
+    This fixture disables this mechanism.
+    The tagged Gherkin element will no longer inherit the background steps.
+
+    :param ctx: Context object to use (during a test run).
+    """
+    # -- SETUP-PART-ONLY: Disable background inheritance (for scenarios only).
+    current_scenario = ctx.scenario
+    if current_scenario:
+        print("FIXTURE-HINT: DISABLE-BACKGROUND FOR: %s" % current_scenario.name)
+        current_scenario.use_background = False
+
+
+# -----------------------------------------------------------------------------
+# MODULE SPECIFIC:
+# -----------------------------------------------------------------------------
+fixture_registry = {
+    "fixture.behave.no_background": behave_no_background,
+}
diff --git a/examples/fixture.no_background/features/environment.py b/examples/fixture.no_background/features/environment.py
new file mode 100644
index 0000000..18857b9
--- /dev/null
+++ b/examples/fixture.no_background/features/environment.py
@@ -0,0 +1,35 @@
+# -*- coding: UTF-8 -*-
+# -- FILE: features/environment.py
+import os.path
+import sys
+
+# -----------------------------------------------------------------------------
+# PYTHON PATH SETUP:
+# -----------------------------------------------------------------------------
+HERE = os.path.dirname(__file__)
+TOPA = os.path.abspath(os.path.join(HERE, ".."))
+
+def setup_python_path():
+    sys.path.insert(0, TOPA)
+
+setup_python_path()
+
+# -----------------------------------------------------------------------------
+# NORMAL PART:
+# -----------------------------------------------------------------------------
+from behave_fixture_lib.no_background import behave_no_background
+from behave.fixture import use_fixture_by_tag
+
+# -- FIXTURE REGISTRY:
+fixture_registry = {
+    "fixture.behave.no_background": behave_no_background,
+}
+
+
+# -----------------------------------------------------------------------------
+# HOOKS:
+# -----------------------------------------------------------------------------
+def before_tag(context, tag):
+    if tag.startswith("fixture."):
+        return use_fixture_by_tag(tag, context, fixture_registry)
+
diff --git a/examples/fixture.no_background/features/example.feature b/examples/fixture.no_background/features/example.feature
new file mode 100644
index 0000000..2025716
--- /dev/null
+++ b/examples/fixture.no_background/features/example.feature
@@ -0,0 +1,18 @@
+Feature: Disable the Background Inheritance Mechanism in some Scenarios
+
+  . BEWARE:
+  .   This is only an example how this can be done (PROOF-OF-CONCEPT).
+  .   This is not an example that you should do this !!!
+
+    Background:
+      Given a background step passes
+
+    Scenario: Alice
+      When a step passes
+      And note that "BACKGROUND STEPS are executed here"
+
+    @fixture.behave.no_background
+    Scenario: Bob
+      Given I need another scenario setup
+      When another step passes
+      And note that "NO-BACKGROUND STEPS are executed here"
diff --git a/examples/fixture.no_background/features/steps/basic_steps.py b/examples/fixture.no_background/features/steps/basic_steps.py
new file mode 100644
index 0000000..34f2107
--- /dev/null
+++ b/examples/fixture.no_background/features/steps/basic_steps.py
@@ -0,0 +1,13 @@
+from behave import given, step
+
+# @step(u'{word} step passes')
+# def step_passes_with_word(context, word):
+#     pass
+
+@step(u'{word} background step passes')
+def step_background_step_passes(context, word):
+    pass
+
+@given(u'I need {word} scenario setup')
+def step_given_i_need_scenario_setup(context, word):
+    pass
diff --git a/examples/fixture.no_background/features/steps/use_steplib_behave4cmd.py b/examples/fixture.no_background/features/steps/use_steplib_behave4cmd.py
new file mode 100644
index 0000000..bc32a32
--- /dev/null
+++ b/examples/fixture.no_background/features/steps/use_steplib_behave4cmd.py
@@ -0,0 +1,12 @@
+# -*- coding: utf-8 -*-
+"""
+Use behave4cmd0 step library (predecessor of behave4cmd).
+"""
+
+from __future__ import absolute_import
+
+# -- REGISTER-STEPS FROM STEP-LIBRARY:
+# import behave4cmd0.__all_steps__
+# import behave4cmd0.failing_steps
+import behave4cmd0.passing_steps
+import behave4cmd0.note_steps
